/*
 * generated by Xtext 2.32.0
 */
package swa.dsl.courses.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import swa.dsl.courses.orga.Declaration
//import swa.dsl.courses.orga.Teacher
import swa.dsl.courses.orga.Course
import swa.dsl.courses.orga.Room
import swa.dsl.courses.orga.AudienceSize

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class OrgaGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		if (resource.contents?.head === null) {
			return;
		}
		val declarations = resource.contents.head.eContents.filter(Declaration)
		fsa.generateFile('data.js', '''
			function getCourses() {
			    const courses = [
			    	«FOR course : declarations.filter(Course) SEPARATOR ','»
			    	{
                        major: '«course.major»',
    		            title: '«course.title»',
    		            type: '«course.type»',
						«IF course.audience == AudienceSize.BIG»
						            audience: 3,
						«ELSEIF course.audience == AudienceSize.MEDIUM»
                                    audience: 2,
						«ELSE»
                                    audience: 1,
			            «ENDIF»
    		            mapping: '«course.course_cat»',
    		            teachers: [
    		            «FOR teacher : course.teachers SEPARATOR ','»
    		            	'«teacher.name»'
    		            «ENDFOR»
    		            ],
    		            students: [
    		            «FOR student : course.students SEPARATOR ','»
    		            	'«student.name»'
    		            «ENDFOR»
    		            ]
		            }
			    	«ENDFOR»
			    ]
			        return courses;
		    }
		    
		    function getRooms() {
		        const rooms = [
		        «FOR room : declarations.filter(Room) SEPARATOR ','»
		        	{
						«IF room.audience == AudienceSize.BIG»
                                    audience: 3,
						«ELSEIF room.audience == AudienceSize.MEDIUM»
                                    audience: 2,
						«ELSE»
                                    audience: 1,
			            «ENDIF»
                        location: '«room.location»'
                    }
		        «ENDFOR»
		        ]
		        return rooms;
		    }
		''')
	}
}

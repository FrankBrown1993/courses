/*
 * generated by Xtext 2.32.0
 */
package swa.dsl.courses.validation;

import org.eclipse.xtext.validation.Check;
import org.eclipse.xtext.validation.CheckType;

import swa.dsl.courses.orga.Course;
import swa.dsl.courses.orga.Room;

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
public class OrgaValidator extends AbstractOrgaValidator {
	
	@Check(CheckType.FAST)
	public void checkRoomLocationSatisfies2PartStructure(Room room) {
		final String[] parts = room.getLocation().split("\\.");
		if(parts.length != 2) {
			warning("Room location should consist of two parts, not " + parts.length + ". (E.g. 1H.001)", null);
		}
	}
	
	@Check(CheckType.FAST)
	public void checkMajorUsesAbbreviation(Course course) {
		if(course.getMajor().length() > 3) {
			warning("Majors should be reffered to by their abbreviations.", null);
		}
	}
	
	@Check(CheckType.FAST)
	public void checkMajorOnlyUpperCase(Course course) {
		for(int i = 0; i < course.getMajor().length(); i++) {
			if(!Character.isUpperCase(course.getMajor().charAt(i))) {
				warning("Majors should be all uppercase", null);
			}
		}
	}
	
	
}

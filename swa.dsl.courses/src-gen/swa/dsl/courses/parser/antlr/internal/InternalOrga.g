/*
 * generated by Xtext 2.32.0
 */
grammar InternalOrga;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package swa.dsl.courses.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package swa.dsl.courses.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import swa.dsl.courses.services.OrgaGrammarAccess;

}

@parser::members {

 	private OrgaGrammarAccess grammarAccess;

    public InternalOrgaParser(TokenStream input, OrgaGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected OrgaGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getDeclarationsDeclarationParserRuleCall_0());
			}
			lv_declarations_0_0=ruleDeclaration
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"declarations",
					lv_declarations_0_0,
					"swa.dsl.courses.Orga.Declaration");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruleDeclaration=ruleDeclaration
	{ $current=$iv_ruleDeclaration.current; }
	EOF;

// Rule Declaration
ruleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getCourseParserRuleCall_0());
		}
		this_Course_0=ruleCourse
		{
			$current = $this_Course_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getRoomParserRuleCall_1());
		}
		this_Room_1=ruleRoom
		{
			$current = $this_Room_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCourse
entryRuleCourse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCourseRule()); }
	iv_ruleCourse=ruleCourse
	{ $current=$iv_ruleCourse.current; }
	EOF;

// Rule Course
ruleCourse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Course'
		{
			newLeafNode(otherlv_0, grammarAccess.getCourseAccess().getCourseKeyword_0());
		}
		(
			(
				lv_title_1_0=RULE_STRING
				{
					newLeafNode(lv_title_1_0, grammarAccess.getCourseAccess().getTitleSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCourseRule());
					}
					setWithLastConsumed(
						$current,
						"title",
						lv_title_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='department'
		{
			newLeafNode(otherlv_2, grammarAccess.getCourseAccess().getDepartmentKeyword_2());
		}
		otherlv_3='is'
		{
			newLeafNode(otherlv_3, grammarAccess.getCourseAccess().getIsKeyword_3());
		}
		(
			(
				lv_department_4_0=RULE_STRING
				{
					newLeafNode(lv_department_4_0, grammarAccess.getCourseAccess().getDepartmentSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCourseRule());
					}
					setWithLastConsumed(
						$current,
						"department",
						lv_department_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='type'
		{
			newLeafNode(otherlv_5, grammarAccess.getCourseAccess().getTypeKeyword_5());
		}
		otherlv_6='is'
		{
			newLeafNode(otherlv_6, grammarAccess.getCourseAccess().getIsKeyword_6());
		}
		(
			(
				lv_type_7_0=RULE_STRING
				{
					newLeafNode(lv_type_7_0, grammarAccess.getCourseAccess().getTypeSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCourseRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_8='audience'
		{
			newLeafNode(otherlv_8, grammarAccess.getCourseAccess().getAudienceKeyword_8());
		}
		otherlv_9='is'
		{
			newLeafNode(otherlv_9, grammarAccess.getCourseAccess().getIsKeyword_9());
		}
		(
			(
				lv_audience_10_0=RULE_ID
				{
					newLeafNode(lv_audience_10_0, grammarAccess.getCourseAccess().getAudienceIDTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCourseRule());
					}
					setWithLastConsumed(
						$current,
						"audience",
						lv_audience_10_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_11='course'
		{
			newLeafNode(otherlv_11, grammarAccess.getCourseAccess().getCourseKeyword_11());
		}
		otherlv_12='category'
		{
			newLeafNode(otherlv_12, grammarAccess.getCourseAccess().getCategoryKeyword_12());
		}
		(
			(
				lv_course_cat_13_0=RULE_STRING
				{
					newLeafNode(lv_course_cat_13_0, grammarAccess.getCourseAccess().getCourse_catSTRINGTerminalRuleCall_13_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCourseRule());
					}
					setWithLastConsumed(
						$current,
						"course_cat",
						lv_course_cat_13_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_14='teached'
		{
			newLeafNode(otherlv_14, grammarAccess.getCourseAccess().getTeachedKeyword_14());
		}
		otherlv_15='by'
		{
			newLeafNode(otherlv_15, grammarAccess.getCourseAccess().getByKeyword_15());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCourseAccess().getTeachersTeacherParserRuleCall_16_0());
				}
				lv_teachers_16_0=ruleTeacher
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCourseRule());
					}
					add(
						$current,
						"teachers",
						lv_teachers_16_0,
						"swa.dsl.courses.Orga.Teacher");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_17='visited'
		{
			newLeafNode(otherlv_17, grammarAccess.getCourseAccess().getVisitedKeyword_17());
		}
		otherlv_18='by'
		{
			newLeafNode(otherlv_18, grammarAccess.getCourseAccess().getByKeyword_18());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCourseAccess().getStudentsStudentParserRuleCall_19_0());
				}
				lv_students_19_0=ruleStudent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCourseRule());
					}
					add(
						$current,
						"students",
						lv_students_19_0,
						"swa.dsl.courses.Orga.Student");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleTeacher
entryRuleTeacher returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTeacherRule()); }
	iv_ruleTeacher=ruleTeacher
	{ $current=$iv_ruleTeacher.current; }
	EOF;

// Rule Teacher
ruleTeacher returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_STRING
			{
				newLeafNode(lv_name_0_0, grammarAccess.getTeacherAccess().getNameSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTeacherRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleStudent
entryRuleStudent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStudentRule()); }
	iv_ruleStudent=ruleStudent
	{ $current=$iv_ruleStudent.current; }
	EOF;

// Rule Student
ruleStudent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_STRING
			{
				newLeafNode(lv_name_0_0, grammarAccess.getStudentAccess().getNameSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStudentRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleRoom
entryRuleRoom returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoomRule()); }
	iv_ruleRoom=ruleRoom
	{ $current=$iv_ruleRoom.current; }
	EOF;

// Rule Room
ruleRoom returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Room'
		{
			newLeafNode(otherlv_0, grammarAccess.getRoomAccess().getRoomKeyword_0());
		}
		(
			(
				lv_location_1_0=RULE_STRING
				{
					newLeafNode(lv_location_1_0, grammarAccess.getRoomAccess().getLocationSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRoomRule());
					}
					setWithLastConsumed(
						$current,
						"location",
						lv_location_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='is'
		{
			newLeafNode(otherlv_2, grammarAccess.getRoomAccess().getIsKeyword_2());
		}
		(
			(
				lv_audience_3_0=RULE_ID
				{
					newLeafNode(lv_audience_3_0, grammarAccess.getRoomAccess().getAudienceIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRoomRule());
					}
					setWithLastConsumed(
						$current,
						"audience",
						lv_audience_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
